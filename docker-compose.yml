version: '3.8'

services:
  web:
    build: .
    restart: unless-stopped
    command: python3 project/main.py
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
      - POSTGRES_HOST=db
    ports:
      - ${PORT}:${PORT}
    depends_on:
      - db
      - redis


  redis:
    image: redis:alpine3.17
    container_name: redis_db
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
     - redis-data:/data

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    environment:
      - REDIS_HOSTS=${REDIS_HOST}:${REDIS_HOST}:${REDIS_PORT}
      - HTTP_USER=${HTTP_USER}
      - HTTP_PASSWORD=${HTTP_PASSWORD}
      - COMMANDER_PORT=${REDIS_PORTS}
    ports:
      - ${REDIS_PORTS}:${REDIS_PORTS}
    depends_on:
      - redis

  db:
    image: postgres:alpine3.17
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  test_db:
    image: postgres:alpine3.17
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${TEST_POSTGRES_USER}
      - POSTGRES_DB=${TEST_POSTGRES_DB}
      - POSTGRES_PASSWORD=${TEST_POSTGRES_PASSWORD}
    ports:
      - ${TEST_POSTGRES_PORT}:${POSTGRES_PORT}
volumes:
  postgres_data:
  redis-data: